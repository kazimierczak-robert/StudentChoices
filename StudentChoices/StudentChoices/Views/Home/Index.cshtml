@model Users

@{
    ViewBag.Title = "StudentChoices";
}

@if (Session["User"] == "Admin" || Session["User"] == "SuperAdmin" || Session["User"] == "Student")
{
    <h3>Zalogowano jako: @Session["UserName"]</h3>

    if (Session["User"] == "Student")
    {
        if ((bool)HttpContext.Current.Application["RecActive"] == true)
        {
            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <h5>Termin zakończenia rekrutacji: @HttpContext.Current.Application["RecStopString"]</h5>

                <div class="panel panel-default">
                    <div class="panel-heading" style="background-color:#539ad7; padding-bottom:4px; padding-top:4px">
                        <h4 style="color:#ffffff">Dostępne przedmioty obieralne i specjalności</h4>
                    </div>
                    <div class="panel-footer">
                        <h4>Informatyka, 1. stopień, st. stacjonarne, sem. 5., -, średnia ocen: 4.02</h4>
                    </div>
                    <div class="panel-body">
                        <h3><b>Przedmiot obieralny 1</b></h3>
                        <h4><b>Programowanie współbieżne</b></h4>
                        <h5>Informacje</h5>
                        <h5>Linki</h5>
                        <h4><b>Protokoły komunikacyjne</b></h4>
                        <h5>Informacje</h5>
                        <h5>Linki</h5>
                        <h4><b>Programowanie robotów</b></h4>
                        <h5>Informacje</h5>
                        <h5>Linki</h5>

                        <div class="row">
                            <div class="col-sm-2">
                                <h5>1. preferencja:</h5> 
                            </div>
                            <div class="col-sm-2">
                                @Html.DropDownList("Subjects", (SelectList)Session["Subjects"], htmlAttributes: new { @class = "form-control", @style="width:auto" })
                            </div>
                        </div>

                    </div>
                </div>
            }
        }
        else
        {
            if ((bool)HttpContext.Current.Application["AfterRec"] == true)
            {
                <h5>Termin zakończenia rekrutacji: @HttpContext.Current.Application["RecStopString"]</h5>
                <h4>Rekrutacja na specjalności oraz przedmioty obieralne jest już zakończona, lecz wyniki nie zostały jeszcze opublikowane.</h4>
            }
            else if ((bool)HttpContext.Current.Application["ShareResults"] == true)
            {
                <h5>Termin zakończenia rekrutacji: @HttpContext.Current.Application["RecStopString"]</h5>

                <div class="panel panel-default">
                    <div class="panel-heading" style="background-color:#539ad7; padding-bottom:4px; padding-top:4px">
                        <h4 style="color:#ffffff">Wyniki rekrutacji na przedmioty obieralne i specjalności</h4>
                    </div>
                    @foreach (var item in (Dictionary<string, Dictionary<string, string>>)Session["Results"])
                    {
                        <div class="panel-footer">
                            <h4>@item.Key</h4>
                        </div>
                        <div class="panel-body">
                            @foreach (var subitem in item.Value)
                            {
                                <h4><b>@subitem.Key</b></h4>
                                <h4>Przydzielono do: <b>@subitem.Value</b></h4>
                            }
                        </div>
                    }
                </div>
            }
            else
            {
                <h5>Rekrutacja na specjalności oraz przedmioty obieralne jeszcze się nie rozpoczęła.</h5>
            }
        }
    }
    else
    {
        <div class="row">
            <div class="col-sm-6" style="padding-top:20px">
                <div class="panel panel-default">
                    <div class="panel-heading" style="background-color:#539ad7; padding-bottom:4px; padding-top:4px">
                        <h4 style="color:#ffffff">Zarządzanie rekrutacją</h4>
                    </div>
                    <div class="panel-body">
                        @using (Html.BeginForm("SaveConfig", "Home"))
                        {
                            @Html.AntiForgeryToken()
                            <div class="checkbox">
                                @Html.CheckBox("isRecruitmentActive", (bool)HttpContext.Current.Application["RecActive"])
                                <h4>Rekrutacja w toku</h4>
                            </div>
                            <div class="input-group date datepicker">
                                <input type="text" name="endDate" class="form-control" style="max-width:100%" value="@HttpContext.Current.Application["RecStopString"]">
                                <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                            </div>

                            <div class="form-group" style="padding-top:10px; text-align:center">
                                <input type="submit" value="Zapisz zmiany" class="btn btn-default" />
                            </div>

                        }
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading" style="background-color:#539ad7; padding-bottom:4px; padding-top:4px">
                        <h4 style="color:#ffffff">Po zakończeniu okresu rekrutacji</h4>
                    </div>
                    <div class="panel-body" style="text-align:center">
                        <div> @Html.ActionLink("Uruchom algorytm", "Run", null, htmlAttributes: new { @class = "btn btn-default" })</div>
                        <div style="padding-top:10px;padding-bottom:10px"> @Html.ActionLink("Udostępnij wyniki studentom", "ShareResults", null, htmlAttributes: new { @class = "btn btn-default" })</div>
                        <div> @Html.ActionLink("Wyeksportuj", "ExportResults", null, htmlAttributes: new { @class = "btn btn-default" })</div>
                    </div>
                </div>

            </div>
            <div class="col-sm-6" style="padding-top:20px">
                <div class="panel panel-default">
                    <div class="panel-heading" style="background-color:#539ad7; padding-bottom:4px; padding-top:4px">
                        <h4 style="color:#ffffff">Statystyki</h4>
                    </div>
                    <div class="panel-body">
                        @using (Html.BeginForm())
                    {
                            @Html.AntiForgeryToken()
                            <div class="row">
                                <div class="col-sm-4">
                                    <h5>Grupa studencka:</h5>
                                </div>
                                <div class="col-sm-6" style="padding-bottom:10px">
                                    @Html.DropDownList("ClassGroups", (SelectList)Session["ClassGroups"], htmlAttributes: new { @class = "form-control", @style = "display:inline-table" })
                                </div>
                                <div class="col-sm-2" style="text-align:center">
                                    <input type="submit" value="Zmień" formaction='@Url.Action("ChangeClassGroup", "Home")' class="btn btn-default" />
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-sm-4">
                                    <h5>Kategoria:</h5>
                                </div>
                                <div class="col-sm-6" style="padding-bottom:10px">
                                    @Html.DropDownList("Categories", (SelectList)Session["Categories"], htmlAttributes: new { @class = "form-control", @style = "display:inline-table" })
                                </div>
                                <div class="col-sm-2" style="text-align:center">
                                    <input type="submit" value="Zmień" formaction='@Url.Action("ChangeCategory", "Home")' class="btn btn-default" />
                                </div>
                            </div>
                        }
                        <br />
                        <h5>Liczba wszystkich studentów: <b>@Session["NoOfStudents"]</b></h5>
                        <h5>Liczba zapisanych studentów: <b>@Session["NoOfSavedStudents"]</b></h5>
                        <br />
                        <h5>Zapisy na poszczególne pozycje:</h5>
                        @foreach (var item in (Dictionary<string, int>)Session["Stats"])
                    {
                            <h5>@item.Key: <b>@item.Value</b></h5>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
}
else
{
    <div style="width:100%; float:left; text-align:center">
        <img src="~/Images/studentChoicesTrim.png" style="max-width:100%; background-size:cover;" alt="" />
    </div>

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container">
            <div class="row">
                <div class="col-sm-8" style="padding-top:20px; margin-right: 3.333333333333333%"> </div>
                <!-- Login Panel -->
                <div class="col-sm-4" style="padding-top:20px">
                    <div class="panel panel-default">
                        <div class="panel-heading" style="background-color:#539ad7; padding-bottom:4px; padding-top:4px"><h4 style="color:#ffffff"><b>Panel logowania</b></h4></div>
                        <div class="panel-body">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger", @style = "pointer-events:none;" })
                            <div class="form-group">
                                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control", @placeholder = "Login", @style = "display:block" } })
                                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Hasło" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <input type="submit" value="Zaloguj" class="btn btn-default" style="float:right"/>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(function () { // will trigger when the document is ready
        $('.datepicker').datepicker(
            {
               
                inline: true,
                sideBySide: true,
                startDate: "@HttpContext.Current.Application["RecActive"]",
                maxViewMode: 2,
                todayBtn: "linked",
                language: "pl",
                autoclose: true
            }); //Initialise any date pickers
    });
</script>
}
