@model StudentChoices.Models.AddStudents

@{
    ViewBag.Title = "Edycja studenta";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm())
{
@Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @if (ViewBag.Success != null)
        {
            <div class="alert alert-margin0px alert-success" style="text-align:center">
                @ViewBag.Success
            </div>
        }
        @if (ViewBag.Alert != null)
        {
            <div class="alert alert-margin0px alert-danger" style="text-align:center">
                @ViewBag.Alert
            </div>
        }

        <div class="form-group-10px">
            @Html.LabelFor(model => model.StudentNo, "Indeks studenta", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <!--<div class="form-group-10px">
            @Html.LabelFor(model => model.Login, "Login", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>-->
        <div class="form-group-10px">
            @Html.LabelFor(model => model.Password, "Hasło", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group-10px">
            @Html.LabelFor(model => model.Name, "Imię", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group-10px">
            @Html.LabelFor(model => model.Surname, "Nazwisko", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group-10px">
            @Html.LabelFor(model => model.AverageGrade, "Średnia", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AverageGrade, new { htmlAttributes = new { @data_val="false", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AverageGrade, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group-10px">
            <label class="control-label col-md-2" for="ClassGroupID">Wybierz grupę</label>
            <div class="col-md-10">
                @Html.DropDownList("ClassGroupID", null, String.Empty, new { @class = "form-control col-md-2" })
                @Html.ValidationMessageFor(model => model.ClassGroupID, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz zmiany" class="btn btn-primary" />
                @Html.ActionLink("Anuluj", "Index" , "Admin", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
