@model StudentChoices.Models.AddSubSpec
@{
    ViewBag.Title = "EditSubSpec";
}

<h2>Edytuj przedmiot lub specjalność</h2>

<hr />
@if (TempData["Alert"] != null)
{
    <div class="alert alert-margin0px alert-danger" style="text-align:center;margin-bottom:10px">
        @TempData["Alert"]
    </div>
}
@if (TempData["Success"] != null)
{
    <div class="alert alert-margin0px alert-success" style="text-align:center;margin-bottom:10px">
        @TempData["Success"]
    </div>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.CategoryID, new { Value = ViewBag.CatID })
    @Html.HiddenFor(model => model.ElectiveSubjectAndSpecialityID, new { Value = ViewBag.SubID })
    <div class="form-horizontal">

        @if (ViewBag.Success != null)
        {
            <div class="alert alert-margin0px alert-success" style="text-align:center">
                @ViewBag.Success
            </div>
            <br />
        }
        @if (ViewBag.Alert != null)
        {
            <div class="alert alert-margin0px alert-danger" style="text-align:center">
                @ViewBag.Alert
            </div>
            <br />
        }
        @if (ViewBag.Info != null)
        {
            <div class="alert alert-margin0px alert-info" style="text-align:center">
                @ViewBag.Info
            </div>
            <br />
        }


        



        <div class="form-group-10px">
            @Html.LabelFor(model => model.Name, "Nazwa przedmiotu/specjalności", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group-10px">
            @Html.LabelFor(model => model.Information, "Informacje (przedmiot/specjalność)", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Information, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Information, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group-10px">
            @Html.LabelFor(model => model.UpperLimit, "Limit górny", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.UpperLimit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UpperLimit, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group-10px">
            @Html.LabelFor(model => model.LowerLimit, "Limit dolny", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.LowerLimit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LowerLimit, "", new { @class = "text-danger" })
            </div>
        </div>


        <br />
        <div class="form-group-10px">
            <div class="col-md-offset-3 col-md-7">
                <input type="submit" value="Zapisz zmiany" class="btn btn-default btn-default-main" />
                @Html.ActionLink("Anuluj", "IndexCat", "Admin", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



